// NeoPixel Ring simple sketch (c) 2013 Shae Erisson
// Released under the GPLv3 license to match the rest of the
// Adafruit NeoPixel library

#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
 #include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif

// Which pin on the Arduino is connected to the NeoPixels?
#define PIN        6 

//paste colors here
uint8_t reds [] = {6,7,9,10,11,13,14,16,17,18,20,21,23,24,27,28,29,32,33,35,37,39,40,43,44,46,49,50,52,54,56,59,61,62,65,67,69,71,73,75,78,80,83,85,87,89,91,93,96,98,100,103,105,108,109,112,115,117,119,121,124,127,128,131,133,136,138,140,142,146,147,149,152,155,157,159,162,164,166,168,171,173,175,178,180,181,183,186,188,190,192,195,197,199,200,203,204,207,209,211,212,214,217,218,219,222,223,225,227,229,231,232,234,235,237,238,240,241,242,244,245,246,248,249,250,251,252,255,254,253,252,251,250,248,247,246,244,244,242,241,239,238,236,235,233,232,230,229,227,225,223,222,220,218,216,215,213,211,208,206,205,202,201,199,196,194,193,190,188,186,184,181,180,178,175,173,171,168,166,164,161,160,157,155,152,150,148,145,143,140,138,136,134,131,129,127,123,121,119,117,114,112,110,107,105,103,100,98,96,94,91,89,87,84,82,80,78,76,73,71,69,67,65,63,60,58,56,54,52,50,49,46,44,43,41,39,37,35,34,31,30,28,27,25,23,22,20,18,17,16,14,13,12,10,9,7,7,6,4,3,2,7,7,9,10,12,13,14,16,17,18,20,22,23,25,26,28,29,32,33,35,37,39,41,42,45,47,48,51,52,54,56,58,60,62,65,67,69,71,73,75,78,80,82,85,87,89,91,93,95,98,100,103,105,108,110,113,115,117,119,122,124,127,129,131,133,136,139,141,143,145,148,150,152,154,157,160,161,164,166,168,170,172,175,177,179,182,184,186,188,190,192,195,196,199,201,203,205,207,209,211,213,214,216,218,220,222,224,225,226,229,230,231,234,235,237,238,239,240,242,244,245,246,247,249,250,251,252,255,254,253,252,251,249,248,247,247,245,244,242,240,240,238,237,235,233,231,230,229,227,225,223,221,220,218,216,214,212,211,209,207,205,203,201,199,196,195,192,191,188,186,184,181,179,177,175,173,171,168,166,164,162,159,157,154,153,150,147,145,143,141,138,136,133,131,129,126,124,121,119,117,114,112,110,107,105,103,101,98,95,94,91,89,87,84,82,80,78,75,74,71,69,67,65,62,60,59,56,55,52,51,48,46,44,43,41,39,37,35,34,31,30,28,26,24,23,22,20,19,17,16,14,13,11,10,8,8,6,5,4,3,2,6,7,9,10,11,12,14,15,17,19,20,22,23,24,26,28,30,32,33,35,37,39,41,43,44,46,48,50,52,55,57,58,61,62,65,67,69,72,73,75,78,80,83,85,87,89,91,93,96,98,100,103,105,107,110,112,115,117,119,121,124,126,129,132,133,136,138,140,142,145,147,150,152,154,157,159,162,164,166,168,170,173,175,177,180,182,184,186,189,191,192,194,197,199,201,202,204,207,209,211,213,215,217,218,220,222,224,225,227,228,231,232,234,235,237,238,240,241,242,243,245,246,247,249,250,251,252,255,254,253,252,251,250,248,247,246,245,243,242,241,239,238,236,235,233,232,230,228,227,225,224,221,220,218,216,215,213,210,209,207,205,202,201,198,197,195,193,190,189,186,183,181,180,177,175,173,170,168,166,163,161,159,156,154,153,150,148,145,143,141,138,135,133,131,129,126,123,122,119,116,114,113,110,108,105,103,100,98,96,93,91,89,87,85,82,80,77,75,73,71,69,67,65,63,61,59,57,55,52,50,48,46,44,42,40,39,37,36,34,31,30,28,27,25,23,22,20,19,17,16,14,13,11,10,8,7,6,5,4,3,2,7,8,9,10,11,13,14,15,17,19,20,21,23,24,27,28,30,31,33,35,37,39,41,43,44,46,49,50,53,54,56,59,60,63,65,67,69,71,74,76,78,80,82,84,87,89,91,93,95,99,100,103,105,107,110,112,114,117,119,122,124,126,128,131,133,135,138,140,143,145,148,150,152,155,156,159,162,164,166,168,171,173,175,177,180,181,184,186,188,190,192,194,196,198,201,202,205,207,208,210,213,214,216,218,219,222,223,225,227,229,230,231,233,235,237,238,239,240,243,243,245,246,248,249,250,251,252,255,254,254,252,251,250,249,247,246,245,244,242,241,239,238,236,235,233,232,230,228,227,225,223,222,220,218,217,215,212,211,209,207,205,203,201,198,196,194,193,190,189,186,184,181,179,178,175,172,171,168,166,163,162,159,157,154,152,150,148,145,143,141,138,135,133,131,129,126,124,121,120,117,114,112,110,108,105,103,101,98,95,94,91,89,87,84,82,80,78,76,74,71,69,67,65,62,61,59,57,54,53,51,48,46,45,42,41,39,37,35,33,32,29,28,26,25,23,21,20,19,17,16,15,13,11,10,9,8,7,5,4,3,2};
uint8_t greens [] = {248,247,246,245,244,243,241,240,238,236,235,234,232,230,228,227,226,223,222,219,219,216,215,212,210,209,207,205,203,201,198,197,194,192,190,188,186,183,182,179,177,175,173,171,168,166,164,162,159,156,154,152,149,148,145,142,141,138,136,133,131,129,127,124,121,119,117,114,112,110,107,105,103,101,99,96,94,91,89,87,85,82,80,78,75,74,72,69,67,65,62,60,59,56,54,52,50,49,47,45,42,41,38,37,35,34,31,30,29,27,25,24,21,20,19,17,15,14,13,12,10,8,7,7,6,5,3,0,1,2,3,4,5,6,8,9,10,11,13,14,16,17,19,20,22,24,24,26,28,30,32,34,35,37,38,41,43,44,46,49,50,53,55,56,59,61,63,65,67,69,71,74,75,78,80,82,85,87,89,91,94,95,98,101,103,105,107,110,112,114,117,120,121,124,127,129,132,134,136,138,140,142,145,147,149,152,154,157,159,161,164,166,168,170,173,175,177,179,181,184,186,188,190,192,194,196,199,201,202,204,207,209,210,212,215,216,218,220,222,223,225,227,228,230,232,233,235,237,238,239,240,242,243,245,247,248,249,249,251,252,253,248,248,246,245,243,242,241,240,238,236,235,233,232,230,229,227,226,223,222,220,218,216,215,213,211,209,207,205,203,201,199,197,195,192,191,188,186,184,182,179,177,175,173,171,169,166,164,161,159,157,154,152,150,148,146,142,140,138,136,134,131,129,126,124,122,119,117,115,112,110,107,105,103,101,98,96,93,91,89,87,84,82,80,78,75,73,71,69,67,65,63,61,58,56,55,53,50,49,46,44,43,40,39,37,35,33,32,30,28,27,25,24,22,20,19,17,16,14,13,11,10,9,8,6,5,4,3,0,1,2,3,4,5,6,8,9,11,11,13,14,16,17,19,20,21,23,25,27,28,30,31,33,35,37,39,41,43,44,47,49,50,52,55,56,59,60,63,65,67,69,71,73,75,77,80,82,85,86,89,91,94,96,98,101,103,105,108,110,112,115,117,119,122,124,127,129,132,134,136,138,141,143,145,148,150,152,155,157,159,161,164,166,168,170,173,175,177,180,182,184,186,188,190,192,194,197,198,201,203,205,207,208,210,213,215,216,218,220,222,223,225,227,228,230,232,234,235,237,238,240,240,242,243,245,246,248,248,250,251,252,253,248,247,247,245,243,242,240,240,237,236,235,233,231,230,229,226,225,223,222,220,218,216,214,213,211,209,206,204,202,201,199,197,195,193,191,188,186,184,181,179,177,175,172,170,168,166,164,161,159,157,154,152,149,148,146,143,140,138,136,134,131,129,126,124,121,119,117,114,112,110,107,105,103,101,99,96,94,91,89,87,85,82,80,78,75,73,71,69,67,65,63,61,59,56,54,52,50,48,46,45,43,41,38,37,35,33,32,30,28,27,25,23,22,20,19,17,16,14,13,11,10,9,7,6,6,4,3,0,1,2,3,4,5,6,8,9,10,11,12,14,15,18,19,20,22,24,24,27,28,30,32,33,35,36,38,41,43,45,46,48,51,53,54,56,58,61,62,65,67,69,71,74,76,77,80,82,84,87,89,92,93,96,98,100,102,105,107,110,113,114,117,119,121,124,127,129,131,134,136,138,140,142,145,147,150,153,154,157,159,161,164,167,168,171,173,175,177,180,181,184,186,188,190,193,194,196,199,201,203,205,207,209,210,212,214,216,218,219,222,224,226,227,228,230,232,233,235,236,238,240,241,242,244,245,246,247,249,250,251,252,253,249,248,246,245,243,243,241,239,238,237,235,234,232,230,229,227,225,224,221,220,218,216,215,213,211,209,206,205,203,201,199,197,194,193,190,188,186,184,182,179,177,175,173,171,168,166,164,161,159,157,154,152,150,147,145,142,140,138,136,133,131,129,126,123,121,120,116,114,112,110,108,105,103,101,98,96,94,92,89,87,85,82,80,78,75,74,71,69,66,65,63,61,59,56,54,52,50,48,47,45,42,41,39,37,35,33,31,30,28,26,24,24,21,20,18,17,15,14,12,12,10,9,8,7,5,4,3,0,1,2,3,5,5,7,8,9,10,11,12,14,16,17,18,20,21,23,25,26,28,29,32,33,35,37,39,40,42,44,47,48,50,52,54,56,59,61,63,65,66,69,72,73,76,77,80,82,84,86,89,91,94,96,98,101,103,105,108,109,112,114,117,119,122,123,126,129,131,134,135,138,141,143,145,147,150,152,155,157,159,161,164,166,168,171,173,175,177,179,182,183,186,188,190,192,194,196,198,200,203,205,207,209,211,213,214,217,218,220,221,223,225,226,229,231,232,233,235,237,237,240,241,242,243,244,246,247,249,250,251,252,253};
uint8_t blues [] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

//end paste block

//long strands have 134 pixels, short strands have 127
#define lightsNum 1043

// When setting up the NeoPixel library, we tell it how many pixels,
// and which pin to use to send signals.
Adafruit_NeoPixel pixels(lightsNum, PIN, NEO_GRB + NEO_KHZ800);

long waitTime = 5;
long startTime = 0;

void setup() {
  startTime = millis();

  pixels.begin(); // INITIALIZE NeoPixel strip object (REQUIRED)
  pixels.show();
}

void loop() {
  for(int i=0; i<lightsNum; i++) { // For each pixel...
    uint32_t color = pixels.Color(reds[i], greens[i], blues[i]);
    pixels.setPixelColor(i, color);
  }
  pixels.show();   // Send the updated pixel colors to the hardware.

}
