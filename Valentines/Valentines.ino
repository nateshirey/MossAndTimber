// NeoPixel Ring simple sketch (c) 2013 Shae Erisson
// Released under the GPLv3 license to match the rest of the
// Adafruit NeoPixel library

#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
 #include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif

// Which pin on the Arduino is connected to the NeoPixels?
#define PIN        6 

//paste colors here
uint8_t xCoord [] = {245,244,242,240,238,236,234,232,230,228,226,225,223,221,219,217,215,213,211,209,207,206,204,202,200,198,196,194,192,190,188,186,185,183,181,179,177,175,173,171,169,167,166,164,162,160,158,156,154,152,150,148,147,145,143,141,139,137,135,133,131,129,128,126,124,122,120,118,116,114,112,110,108,107,105,103,101,99,97,95,93,91,89,88,86,84,82,80,78,76,74,72,70,69,67,65,63,61,59,57,55,53,51,49,48,46,44,42,40,38,36,34,32,30,29,27,25,23,21,19,17,15,13,11,10,8,6,0,2,4,6,8,10,11,13,15,17,19,21,23,25,27,29,30,32,34,36,38,40,42,44,46,48,49,51,53,55,57,59,61,63,65,67,69,70,72,74,76,78,80,82,84,86,88,89,91,93,95,97,99,101,103,105,107,108,110,112,114,116,118,120,122,124,126,128,129,131,133,135,137,139,141,143,145,147,148,150,152,154,156,158,160,162,164,166,167,169,171,173,175,177,179,181,183,185,186,188,190,192,194,196,198,200,202,204,206,207,209,211,213,215,217,219,221,223,225,226,228,230,232,234,236,238,240,242,244,245,247,249,251,253,245,244,242,240,238,236,234,232,230,228,226,225,223,221,219,217,215,213,211,209,207,206,204,202,200,198,196,194,192,190,188,186,185,183,181,179,177,175,173,171,169,167,166,164,162,160,158,156,154,152,150,148,147,145,143,141,139,137,135,133,131,129,128,126,124,122,120,118,116,114,112,110,108,107,105,103,101,99,97,95,93,91,89,88,86,84,82,80,78,76,74,72,70,69,67,65,63,61,59,57,55,53,51,49,48,46,44,42,40,38,36,34,32,30,29,27,25,23,21,19,17,15,13,11,10,8,6,0,2,4,6,8,10,11,13,15,17,19,21,23,25,27,29,30,32,34,36,38,40,42,44,46,48,49,51,53,55,57,59,61,63,65,67,69,70,72,74,76,78,80,82,84,86,88,89,91,93,95,97,99,101,103,105,107,108,110,112,114,116,118,120,122,124,126,128,129,131,133,135,137,139,141,143,145,147,148,150,152,154,156,158,160,162,164,166,167,169,171,173,175,177,179,181,183,185,186,188,190,192,194,196,198,200,202,204,206,207,209,211,213,215,217,219,221,223,225,226,228,230,232,234,236,238,240,242,244,245,247,249,251,253,245,244,242,240,238,236,234,232,230,228,226,225,223,221,219,217,215,213,211,209,207,206,204,202,200,198,196,194,192,190,188,186,185,183,181,179,177,175,173,171,169,167,166,164,162,160,158,156,154,152,150,148,147,145,143,141,139,137,135,133,131,129,128,126,124,122,120,118,116,114,112,110,108,107,105,103,101,99,97,95,93,91,89,88,86,84,82,80,78,76,74,72,70,69,67,65,63,61,59,57,55,53,51,49,48,46,44,42,40,38,36,34,32,30,29,27,25,23,21,19,17,15,13,11,10,8,6,0,2,4,6,8,10,11,13,15,17,19,21,23,25,27,29,30,32,34,36,38,40,42,44,46,48,49,51,53,55,57,59,61,63,65,67,69,70,72,74,76,78,80,82,84,86,88,89,91,93,95,97,99,101,103,105,107,108,110,112,114,116,118,120,122,124,126,128,129,131,133,135,137,139,141,143,145,147,148,150,152,154,156,158,160,162,164,166,167,169,171,173,175,177,179,181,183,185,186,188,190,192,194,196,198,200,202,204,206,207,209,211,213,215,217,219,221,223,225,226,228,230,232,234,236,238,240,242,244,245,247,249,251,253,245,244,242,240,238,236,234,232,230,228,226,225,223,221,219,217,215,213,211,209,207,206,204,202,200,198,196,194,192,190,188,186,185,183,181,179,177,175,173,171,169,167,166,164,162,160,158,156,154,152,150,148,147,145,143,141,139,137,135,133,131,129,128,126,124,122,120,118,116,114,112,110,108,107,105,103,101,99,97,95,93,91,89,88,86,84,82,80,78,76,74,72,70,69,67,65,63,61,59,57,55,53,51,49,48,46,44,42,40,38,36,34,32,30,29,27,25,23,21,19,17,15,13,11,10,8,6,0,2,4,6,8,10,11,13,15,17,19,21,23,25,27,29,30,32,34,36,38,40,42,44,46,48,49,51,53,55,57,59,61,63,65,67,69,70,72,74,76,78,80,82,84,86,88,89,91,93,95,97,99,101,103,105,107,108,110,112,114,116,118,120,122,124,126,128,129,131,133,135,137,139,141,143,145,147,148,150,152,154,156,158,160,162,164,166,167,169,171,173,175,177,179,181,183,185,186,188,190,192,194,196,198,200,202,204,206,207,209,211,213,215,217,219,221,223,225,226,228,230,232,234,236,238,240,242,244,245,247,249,251,253};
uint8_t yCoord [] = {};

//end paste block

//long strands have 134 pixels, short strands have 127
#define lightsNum 1043

// When setting up the NeoPixel library, we tell it how many pixels,
// and which pin to use to send signals.
Adafruit_NeoPixel pixels(lightsNum, PIN, NEO_GRB + NEO_KHZ800);

long startTime = 0;
long moveSpeed = 10;
int state = 1;
long timer = 0;

long valueX = 0;
long valueY = 0;

void setup() {
  startTime = millis();

  pixels.begin(); // INITIALIZE NeoPixel strip object (REQUIRED)
  pixels.show();
}

void Wipe() {
  for(int i=0; i<lightsNum; i++) { // For each pixel...
    uint32_t color = pixels.Color(0, 0, 255);

    long pos = xCoord[i] - 127;
    pos = abs(pos);
    pos = pos - 127;
    pos = abs(pos);
    if(pos >= timer){
      color = pixels.Color(0, 255, 0);
    }
    pixels.setPixelColor(i, color);
  }
}

void Hit(){
  uint8_t center = 127;
  uint8_t radius = 127;
  for(int i=0; i<lightsNum; i++){
    uint32_t color = pixels.Color(0, 0, 0);

    long x = xCoord[i] - center;
    long y = yCoord[i] - center;
    //this just accounts for the stretch
    x = x * 2;

    valueX = x * x + y * y;
    valueX = sqrt(valueX);

    if(valueX < radius){
      color = pixels.Color(255, 0, 0);
    }

    pixels.setPixelColor(i, color);
  }
}

void Pulse(){
  uint8_t luminence = sin(timer * 0.25);
  uint8_t center = 127;
  uint8_t radius = timer;
  
  for(int i=0; i<lightsNum; i++){
    uint32_t color = pixels.Color(0, 0, 0);

    long x = xCoord[i] - center;
    long y = yCoord[i] - center;
    //this just accounts for the stretch
    x = x * 2;
    //distance from center
    valueX = x * x + y * y;
    valueX = sqrt(valueX);

    if(valueX < radius){
      color = pixels.Color(255, 0, 0);
    }
    
    pixels.setPixelColor(i, color);
  }
}

void HandleState(){
  switch(state){
    case 0:
      Wipe();
      break;
    case 1:
      Hit();
      break;
    case 2:
      Pulse();
      break;
  }
}

void loop() {
  timer += moveSpeed;

  if(timer > 255){
    timer = 0;
    
    state += 1;
    if(state > 2){
      state = 0;
    }
  }
  
  HandleState();
  
  pixels.show();   // Send the updated pixel colors to the hardware.

}
